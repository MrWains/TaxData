/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { GeographicMapSeriesHostDescription } from "./GeographicMapSeriesHostDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let GeographicProportionalSymbolSeriesDescription = /*@__PURE__*/ (() => {
    class GeographicProportionalSymbolSeriesDescription extends GeographicMapSeriesHostDescription {
        constructor() {
            super();
            this.dl = null;
            this.dm = null;
            this.dt = null;
            this.dr = null;
            this.dp = null;
            this.ds = null;
            this.dn = null;
            this.dq = null;
            this.dd = 0;
            this.du = null;
            this.cu = null;
            this.dk = null;
            this.di = null;
            this.cs = null;
            this.cw = false;
            this.cz = false;
            this.c7 = 0;
            this.c6 = 0;
            this.c8 = 0;
            this.c0 = false;
            this.cy = false;
            this.cx = false;
            this.dj = null;
            this.dc = 0;
            this.dh = null;
            this.dg = null;
        }
        get_type() {
            return "GeographicProportionalSymbolSeries";
        }
        get latitudeMemberPath() {
            return this.dl;
        }
        set latitudeMemberPath(a) {
            this.dl = a;
            this.e("LatitudeMemberPath");
        }
        get longitudeMemberPath() {
            return this.dm;
        }
        set longitudeMemberPath(a) {
            this.dm = a;
            this.e("LongitudeMemberPath");
        }
        get markerType() {
            return this.dt;
        }
        set markerType(a) {
            this.dt = a;
            this.e("MarkerType");
        }
        get markerOutlineMode() {
            return this.dr;
        }
        set markerOutlineMode(a) {
            this.dr = a;
            this.e("MarkerOutlineMode");
        }
        get markerFillMode() {
            return this.dp;
        }
        set markerFillMode(a) {
            this.dp = a;
            this.e("MarkerFillMode");
        }
        get markerTemplateRef() {
            return this.ds;
        }
        set markerTemplateRef(a) {
            this.ds = a;
            this.e("MarkerTemplateRef");
        }
        get markerBrush() {
            return this.dn;
        }
        set markerBrush(a) {
            this.dn = a;
            this.e("MarkerBrush");
        }
        get markerOutline() {
            return this.dq;
        }
        set markerOutline(a) {
            this.dq = a;
            this.e("MarkerOutline");
        }
        get maximumMarkers() {
            return this.dd;
        }
        set maximumMarkers(a) {
            this.dd = a;
            this.e("MaximumMarkers");
        }
        get radiusMemberPath() {
            return this.du;
        }
        set radiusMemberPath(a) {
            this.du = a;
            this.e("RadiusMemberPath");
        }
        get radiusScale() {
            return this.cu;
        }
        set radiusScale(a) {
            this.cu = a;
            this.e("RadiusScale");
        }
        get labelMemberPath() {
            return this.dk;
        }
        set labelMemberPath(a) {
            this.dk = a;
            this.e("LabelMemberPath");
        }
        get fillMemberPath() {
            return this.di;
        }
        set fillMemberPath(a) {
            this.di = a;
            this.e("FillMemberPath");
        }
        get fillScale() {
            return this.cs;
        }
        set fillScale(a) {
            this.cs = a;
            this.e("FillScale");
        }
        get fillScaleUseGlobalValues() {
            return this.cw;
        }
        set fillScaleUseGlobalValues(a) {
            this.cw = a;
            this.e("FillScaleUseGlobalValues");
        }
        get markerOutlineUsesFillScale() {
            return this.cz;
        }
        set markerOutlineUsesFillScale(a) {
            this.cz = a;
            this.e("MarkerOutlineUsesFillScale");
        }
        get markerOutlineBrightness() {
            return this.c7;
        }
        set markerOutlineBrightness(a) {
            this.c7 = a;
            this.e("MarkerOutlineBrightness");
        }
        get markerBrushBrightness() {
            return this.c6;
        }
        set markerBrushBrightness(a) {
            this.c6 = a;
            this.e("MarkerBrushBrightness");
        }
        get markerThickness() {
            return this.c8;
        }
        set markerThickness(a) {
            this.c8 = a;
            this.e("MarkerThickness");
        }
        get radiusScaleUseGlobalValues() {
            return this.c0;
        }
        set radiusScaleUseGlobalValues(a) {
            this.c0 = a;
            this.e("RadiusScaleUseGlobalValues");
        }
        get isCustomScatterStyleAllowed() {
            return this.cy;
        }
        set isCustomScatterStyleAllowed(a) {
            this.cy = a;
            this.e("IsCustomScatterStyleAllowed");
        }
        get isCustomScatterMarkerStyleAllowed() {
            return this.cx;
        }
        set isCustomScatterMarkerStyleAllowed(a) {
            this.cx = a;
            this.e("IsCustomScatterMarkerStyleAllowed");
        }
        get itemSearchMode() {
            return this.dj;
        }
        set itemSearchMode(a) {
            this.dj = a;
            this.e("ItemSearchMode");
        }
        get itemSearchThreshold() {
            return this.dc;
        }
        set itemSearchThreshold(a) {
            this.dc = a;
            this.e("ItemSearchThreshold");
        }
        get assigningScatterStyleRef() {
            return this.dh;
        }
        set assigningScatterStyleRef(a) {
            this.dh = a;
            this.e("AssigningScatterStyleRef");
        }
        get assigningScatterMarkerStyleRef() {
            return this.dg;
        }
        set assigningScatterMarkerStyleRef(a) {
            this.dg = a;
            this.e("AssigningScatterMarkerStyleRef");
        }
    }
    GeographicProportionalSymbolSeriesDescription.$t = /*@__PURE__*/ markType(GeographicProportionalSymbolSeriesDescription, 'GeographicProportionalSymbolSeriesDescription', GeographicMapSeriesHostDescription.$);
    return GeographicProportionalSymbolSeriesDescription;
})();
//# sourceMappingURL=GeographicProportionalSymbolSeriesDescription.js.map
