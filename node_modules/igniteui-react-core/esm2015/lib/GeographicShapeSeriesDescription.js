/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { GeographicShapeSeriesBaseDescription } from "./GeographicShapeSeriesBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let GeographicShapeSeriesDescription = /*@__PURE__*/ (() => {
    class GeographicShapeSeriesDescription extends GeographicShapeSeriesBaseDescription {
        constructor() {
            super();
            this.ds = null;
            this.dq = null;
            this.dr = null;
            this.de = 0;
            this.dd = 0;
            this.dp = null;
            this.dm = null;
            this.dk = null;
            this.dn = null;
            this.di = null;
            this.dl = null;
            this.dc = 0;
            this.dj = null;
            this.dt = null;
        }
        get_type() {
            return "GeographicShapeSeries";
        }
        get shapeStyleSelectorRef() {
            return this.ds;
        }
        set shapeStyleSelectorRef(a) {
            this.ds = a;
            this.e("ShapeStyleSelectorRef");
        }
        get shapeFill() {
            return this.dq;
        }
        set shapeFill(a) {
            this.dq = a;
            this.e("ShapeFill");
        }
        get shapeStroke() {
            return this.dr;
        }
        set shapeStroke(a) {
            this.dr = a;
            this.e("ShapeStroke");
        }
        get shapeStrokeThickness() {
            return this.de;
        }
        set shapeStrokeThickness(a) {
            this.de = a;
            this.e("ShapeStrokeThickness");
        }
        get shapeOpacity() {
            return this.dd;
        }
        set shapeOpacity(a) {
            this.dd = a;
            this.e("ShapeOpacity");
        }
        get markerType() {
            return this.dp;
        }
        set markerType(a) {
            this.dp = a;
            this.e("MarkerType");
        }
        get markerOutlineMode() {
            return this.dm;
        }
        set markerOutlineMode(a) {
            this.dm = a;
            this.e("MarkerOutlineMode");
        }
        get markerFillMode() {
            return this.dk;
        }
        set markerFillMode(a) {
            this.dk = a;
            this.e("MarkerFillMode");
        }
        get markerTemplateRef() {
            return this.dn;
        }
        set markerTemplateRef(a) {
            this.dn = a;
            this.e("MarkerTemplateRef");
        }
        get markerBrush() {
            return this.di;
        }
        set markerBrush(a) {
            this.di = a;
            this.e("MarkerBrush");
        }
        get markerOutline() {
            return this.dl;
        }
        set markerOutline(a) {
            this.dl = a;
            this.e("MarkerOutline");
        }
        get markerThickness() {
            return this.dc;
        }
        set markerThickness(a) {
            this.dc = a;
            this.e("MarkerThickness");
        }
        get markerCollisionAvoidance() {
            return this.dj;
        }
        set markerCollisionAvoidance(a) {
            this.dj = a;
            this.e("MarkerCollisionAvoidance");
        }
        get styleShapeRef() {
            return this.dt;
        }
        set styleShapeRef(a) {
            this.dt = a;
            this.e("StyleShapeRef");
        }
    }
    GeographicShapeSeriesDescription.$t = /*@__PURE__*/ markType(GeographicShapeSeriesDescription, 'GeographicShapeSeriesDescription', GeographicShapeSeriesBaseDescription.$);
    return GeographicShapeSeriesDescription;
})();
//# sourceMappingURL=GeographicShapeSeriesDescription.js.map
