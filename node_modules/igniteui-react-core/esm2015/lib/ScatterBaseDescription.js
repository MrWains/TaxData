/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ScatterBaseDescription = /*@__PURE__*/ (() => {
    class ScatterBaseDescription extends MarkerSeriesDescription {
        constructor() {
            super();
            this.dv = null;
            this.dx = null;
            this.dw = null;
            this.dy = null;
            this.du = null;
            this.dt = null;
            this.dn = null;
            this.dc = 0;
            this.dg = 0;
            this.ds = null;
            this.dh = 0;
            this.df = 0;
            this.dr = null;
            this.de = 0;
            this.dm = null;
            this.c9 = false;
            this.c8 = false;
            this.dq = null;
            this.dp = null;
        }
        get_type() {
            return "ScatterBase";
        }
        get xAxisRef() {
            return this.dv;
        }
        set xAxisRef(a) {
            this.dv = a;
            this.e("XAxisRef");
        }
        get yAxisRef() {
            return this.dx;
        }
        set yAxisRef(a) {
            this.dx = a;
            this.e("YAxisRef");
        }
        get xMemberPath() {
            return this.dw;
        }
        set xMemberPath(a) {
            this.dw = a;
            this.e("XMemberPath");
        }
        get yMemberPath() {
            return this.dy;
        }
        set yMemberPath(a) {
            this.dy = a;
            this.e("YMemberPath");
        }
        get trendLineType() {
            return this.du;
        }
        set trendLineType(a) {
            this.du = a;
            this.e("TrendLineType");
        }
        get trendLineBrush() {
            return this.dt;
        }
        set trendLineBrush(a) {
            this.dt = a;
            this.e("TrendLineBrush");
        }
        get actualTrendLineBrush() {
            return this.dn;
        }
        set actualTrendLineBrush(a) {
            this.dn = a;
            this.e("ActualTrendLineBrush");
        }
        get trendLineThickness() {
            return this.dc;
        }
        set trendLineThickness(a) {
            this.dc = a;
            this.e("TrendLineThickness");
        }
        get trendLinePeriod() {
            return this.dg;
        }
        set trendLinePeriod(a) {
            this.dg = a;
            this.e("TrendLinePeriod");
        }
        get markerCollisionAvoidance() {
            return this.ds;
        }
        set markerCollisionAvoidance(a) {
            this.ds = a;
            this.e("MarkerCollisionAvoidance");
        }
        get trendLineZIndex() {
            return this.dh;
        }
        set trendLineZIndex(a) {
            this.dh = a;
            this.e("TrendLineZIndex");
        }
        get maximumMarkers() {
            return this.df;
        }
        set maximumMarkers(a) {
            this.df = a;
            this.e("MaximumMarkers");
        }
        get itemSearchMode() {
            return this.dr;
        }
        set itemSearchMode(a) {
            this.dr = a;
            this.e("ItemSearchMode");
        }
        get itemSearchThreshold() {
            return this.de;
        }
        set itemSearchThreshold(a) {
            this.de = a;
            this.e("ItemSearchThreshold");
        }
        get actualItemSearchMode() {
            return this.dm;
        }
        set actualItemSearchMode(a) {
            this.dm = a;
            this.e("ActualItemSearchMode");
        }
        get isCustomScatterStyleAllowed() {
            return this.c9;
        }
        set isCustomScatterStyleAllowed(a) {
            this.c9 = a;
            this.e("IsCustomScatterStyleAllowed");
        }
        get isCustomScatterMarkerStyleAllowed() {
            return this.c8;
        }
        set isCustomScatterMarkerStyleAllowed(a) {
            this.c8 = a;
            this.e("IsCustomScatterMarkerStyleAllowed");
        }
        get assigningScatterStyleRef() {
            return this.dq;
        }
        set assigningScatterStyleRef(a) {
            this.dq = a;
            this.e("AssigningScatterStyleRef");
        }
        get assigningScatterMarkerStyleRef() {
            return this.dp;
        }
        set assigningScatterMarkerStyleRef(a) {
            this.dp = a;
            this.e("AssigningScatterMarkerStyleRef");
        }
    }
    ScatterBaseDescription.$t = /*@__PURE__*/ markType(ScatterBaseDescription, 'ScatterBaseDescription', MarkerSeriesDescription.$);
    return ScatterBaseDescription;
})();
//# sourceMappingURL=ScatterBaseDescription.js.map
