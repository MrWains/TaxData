/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let FinancialChartDescription = /*@__PURE__*/ (() => {
    class FinancialChartDescription extends XYChartDescription {
        constructor() {
            super();
            this.kr = null;
            this.kt = null;
            this.kq = null;
            this.ko = null;
            this.jp = 0;
            this.i5 = false;
            this.js = 0;
            this.jb = false;
            this.kg = 0;
            this.ju = 0;
            this.jw = 0;
            this.jv = 0;
            this.jx = 0;
            this.ks = null;
            this.ku = null;
            this.kx = null;
            this.i7 = false;
            this.kp = null;
            this.kv = null;
            this.i9 = false;
            this.ig = null;
            this.il = null;
            this.ja = false;
            this.jr = 0;
            this.kw = null;
            this.ky = null;
            this.ih = null;
            this.ii = null;
            this.ij = null;
            this.ik = null;
            this.ip = null;
            this.io = null;
            this.ie = null;
            this.ic = null;
            this.jt = 0;
            this.jq = 0;
            this.jo = 0;
            this.id = null;
            this.kc = 0;
            this.jn = 0;
            this.kf = 0;
            this.kd = 0;
            this.kb = 0;
            this.ke = 0;
            this.im = null;
            this.ib = null;
            this.i8 = false;
            this.kz = null;
            this.jy = 0;
            this.i6 = false;
            this.jk = new Date();
            this.jj = new Date();
            this.iq = null;
            this.kn = null;
        }
        get tooltipTemplateRef() {
            return this.kr;
        }
        set tooltipTemplateRef(a) {
            this.kr = a;
            this.e("TooltipTemplateRef");
        }
        get width() {
            return this.kt;
        }
        set width(a) {
            this.kt = a;
            this.e("Width");
        }
        get height() {
            return this.kq;
        }
        set height(a) {
            this.kq = a;
            this.e("Height");
        }
        get background() {
            return this.ko;
        }
        set background(a) {
            this.ko = a;
            this.e("Background");
        }
        get_type() {
            return "FinancialChart";
        }
        get leftMargin() {
            return this.jp;
        }
        set leftMargin(a) {
            this.jp = a;
            this.e("LeftMargin");
        }
        get isHorizontalZoomEnabled() {
            return this.i5;
        }
        set isHorizontalZoomEnabled(a) {
            this.i5 = a;
            this.e("IsHorizontalZoomEnabled");
        }
        get toolbarHeight() {
            return this.js;
        }
        set toolbarHeight(a) {
            this.js = a;
            this.e("ToolbarHeight");
        }
        get yAxisIsLogarithmic() {
            return this.jb;
        }
        set yAxisIsLogarithmic(a) {
            this.jb = a;
            this.e("YAxisIsLogarithmic");
        }
        get yAxisLogarithmBase() {
            return this.kg;
        }
        set yAxisLogarithmBase(a) {
            this.kg = a;
            this.e("YAxisLogarithmBase");
        }
        get yAxisInterval() {
            return this.ju;
        }
        set yAxisInterval(a) {
            this.ju = a;
            this.e("YAxisInterval");
        }
        get yAxisMinimumValue() {
            return this.jw;
        }
        set yAxisMinimumValue(a) {
            this.jw = a;
            this.e("YAxisMinimumValue");
        }
        get yAxisMaximumValue() {
            return this.jv;
        }
        set yAxisMaximumValue(a) {
            this.jv = a;
            this.e("YAxisMaximumValue");
        }
        get yAxisMinorInterval() {
            return this.jx;
        }
        set yAxisMinorInterval(a) {
            this.jx = a;
            this.e("YAxisMinorInterval");
        }
        get volumeType() {
            return this.ks;
        }
        set volumeType(a) {
            this.ks = a;
            this.e("VolumeType");
        }
        get xAxisMode() {
            return this.ku;
        }
        set xAxisMode(a) {
            this.ku = a;
            this.e("XAxisMode");
        }
        get yAxisMode() {
            return this.kx;
        }
        set yAxisMode(a) {
            this.kx = a;
            this.e("YAxisMode");
        }
        get isToolbarVisible() {
            return this.i7;
        }
        set isToolbarVisible(a) {
            this.i7 = a;
            this.e("IsToolbarVisible");
        }
        get chartType() {
            return this.kp;
        }
        set chartType(a) {
            this.kp = a;
            this.e("ChartType");
        }
        get yAxisLabelHorizontalAlignment() {
            return this.kv;
        }
        set yAxisLabelHorizontalAlignment(a) {
            this.kv = a;
            this.e("YAxisLabelHorizontalAlignment");
        }
        get isWindowSyncedToVisibleRange() {
            return this.i9;
        }
        set isWindowSyncedToVisibleRange(a) {
            this.i9 = a;
            this.e("IsWindowSyncedToVisibleRange");
        }
        get indicatorTypes() {
            return this.ig;
        }
        set indicatorTypes(a) {
            this.ig = a;
            this.e("IndicatorTypes");
        }
        get overlayTypes() {
            return this.il;
        }
        set overlayTypes(a) {
            this.il = a;
            this.e("OverlayTypes");
        }
        get yAxisAbbreviateLargeNumbers() {
            return this.ja;
        }
        set yAxisAbbreviateLargeNumbers(a) {
            this.ja = a;
            this.e("YAxisAbbreviateLargeNumbers");
        }
        get resolution() {
            return this.jr;
        }
        set resolution(a) {
            this.jr = a;
            this.e("Resolution");
        }
        get yAxisLabelLocation() {
            return this.kw;
        }
        set yAxisLabelLocation(a) {
            this.kw = a;
            this.e("YAxisLabelLocation");
        }
        get zoomSliderType() {
            return this.ky;
        }
        set zoomSliderType(a) {
            this.ky = a;
            this.e("ZoomSliderType");
        }
        get negativeBrushes() {
            return this.ih;
        }
        set negativeBrushes(a) {
            this.ih = a;
            this.e("NegativeBrushes");
        }
        get negativeOutlines() {
            return this.ii;
        }
        set negativeOutlines(a) {
            this.ii = a;
            this.e("NegativeOutlines");
        }
        get overlayBrushes() {
            return this.ij;
        }
        set overlayBrushes(a) {
            this.ij = a;
            this.e("OverlayBrushes");
        }
        get overlayOutlines() {
            return this.ik;
        }
        set overlayOutlines(a) {
            this.ik = a;
            this.e("OverlayOutlines");
        }
        get volumeOutlines() {
            return this.ip;
        }
        set volumeOutlines(a) {
            this.ip = a;
            this.e("VolumeOutlines");
        }
        get volumeBrushes() {
            return this.io;
        }
        set volumeBrushes(a) {
            this.io = a;
            this.e("VolumeBrushes");
        }
        get indicatorNegativeBrushes() {
            return this.ie;
        }
        set indicatorNegativeBrushes(a) {
            this.ie = a;
            this.e("IndicatorNegativeBrushes");
        }
        get indicatorBrushes() {
            return this.ic;
        }
        set indicatorBrushes(a) {
            this.ic = a;
            this.e("IndicatorBrushes");
        }
        get volumeThickness() {
            return this.jt;
        }
        set volumeThickness(a) {
            this.jt = a;
            this.e("VolumeThickness");
        }
        get overlayThickness() {
            return this.jq;
        }
        set overlayThickness(a) {
            this.jq = a;
            this.e("OverlayThickness");
        }
        get indicatorThickness() {
            return this.jo;
        }
        set indicatorThickness(a) {
            this.jo = a;
            this.e("IndicatorThickness");
        }
        get indicatorDisplayTypes() {
            return this.id;
        }
        set indicatorDisplayTypes(a) {
            this.id = a;
            this.e("IndicatorDisplayTypes");
        }
        get indicatorPeriod() {
            return this.kc;
        }
        set indicatorPeriod(a) {
            this.kc = a;
            this.e("IndicatorPeriod");
        }
        get indicatorMultiplier() {
            return this.jn;
        }
        set indicatorMultiplier(a) {
            this.jn = a;
            this.e("IndicatorMultiplier");
        }
        get indicatorSmoothingPeriod() {
            return this.kf;
        }
        set indicatorSmoothingPeriod(a) {
            this.kf = a;
            this.e("IndicatorSmoothingPeriod");
        }
        get indicatorShortPeriod() {
            return this.kd;
        }
        set indicatorShortPeriod(a) {
            this.kd = a;
            this.e("IndicatorShortPeriod");
        }
        get indicatorLongPeriod() {
            return this.kb;
        }
        set indicatorLongPeriod(a) {
            this.kb = a;
            this.e("IndicatorLongPeriod");
        }
        get indicatorSignalPeriod() {
            return this.ke;
        }
        set indicatorSignalPeriod(a) {
            this.ke = a;
            this.e("IndicatorSignalPeriod");
        }
        get rangeSelectorOptions() {
            return this.im;
        }
        set rangeSelectorOptions(a) {
            this.im = a;
            this.e("RangeSelectorOptions");
        }
        get customIndicatorNames() {
            return this.ib;
        }
        set customIndicatorNames(a) {
            this.ib = a;
            this.e("CustomIndicatorNames");
        }
        get isVerticalZoomEnabled() {
            return this.i8;
        }
        set isVerticalZoomEnabled(a) {
            this.i8 = a;
            this.e("IsVerticalZoomEnabled");
        }
        get zoomSliderXAxisMajorStroke() {
            return this.kz;
        }
        set zoomSliderXAxisMajorStroke(a) {
            this.kz = a;
            this.e("ZoomSliderXAxisMajorStroke");
        }
        get zoomSliderXAxisMajorStrokeThickness() {
            return this.jy;
        }
        set zoomSliderXAxisMajorStrokeThickness(a) {
            this.jy = a;
            this.e("ZoomSliderXAxisMajorStrokeThickness");
        }
        get isLegendVisible() {
            return this.i6;
        }
        set isLegendVisible(a) {
            this.i6 = a;
            this.e("IsLegendVisible");
        }
        get xAxisMinimumValue() {
            return this.jk;
        }
        set xAxisMinimumValue(a) {
            this.jk = a;
            this.e("XAxisMinimumValue");
        }
        get xAxisMaximumValue() {
            return this.jj;
        }
        set xAxisMaximumValue(a) {
            this.jj = a;
            this.e("XAxisMaximumValue");
        }
        get xAxisBreaks() {
            return this.iq;
        }
        set xAxisBreaks(a) {
            this.iq = a;
            this.e("XAxisBreaks");
        }
        get applyCustomIndicatorsRef() {
            return this.kn;
        }
        set applyCustomIndicatorsRef(a) {
            this.kn = a;
            this.e("ApplyCustomIndicatorsRef");
        }
    }
    FinancialChartDescription.$t = /*@__PURE__*/ markType(FinancialChartDescription, 'FinancialChartDescription', XYChartDescription.$);
    return FinancialChartDescription;
})();
//# sourceMappingURL=FinancialChartDescription.js.map
