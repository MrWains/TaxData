/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { SeriesDescription } from "./SeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var MarkerSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(MarkerSeriesDescription, _super);
    function MarkerSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.cy = null;
        _this.cw = null;
        _this.cu = null;
        _this.cx = null;
        _this.co = 0;
        _this.cs = null;
        _this.ct = null;
        _this.cq = null;
        _this.cv = null;
        _this.cr = null;
        return _this;
    }
    MarkerSeriesDescription.prototype.get_type = function () {
        return "MarkerSeries";
    };
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerType", {
        get: function () {
            return this.cy;
        },
        set: function (a) {
            this.cy = a;
            this.e("MarkerType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerOutlineMode", {
        get: function () {
            return this.cw;
        },
        set: function (a) {
            this.cw = a;
            this.e("MarkerOutlineMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerFillMode", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            this.cu = a;
            this.e("MarkerFillMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerTemplateRef", {
        get: function () {
            return this.cx;
        },
        set: function (a) {
            this.cx = a;
            this.e("MarkerTemplateRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerThickness", {
        get: function () {
            return this.co;
        },
        set: function (a) {
            this.co = a;
            this.e("MarkerThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerTemplateRef", {
        get: function () {
            return this.cs;
        },
        set: function (a) {
            this.cs = a;
            this.e("ActualMarkerTemplateRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerBrush", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            this.ct = a;
            this.e("MarkerBrush");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerBrush", {
        get: function () {
            return this.cq;
        },
        set: function (a) {
            this.cq = a;
            this.e("ActualMarkerBrush");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerOutline", {
        get: function () {
            return this.cv;
        },
        set: function (a) {
            this.cv = a;
            this.e("MarkerOutline");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerOutline", {
        get: function () {
            return this.cr;
        },
        set: function (a) {
            this.cr = a;
            this.e("ActualMarkerOutline");
        },
        enumerable: true,
        configurable: true
    });
    MarkerSeriesDescription.$t = markType(MarkerSeriesDescription, 'MarkerSeriesDescription', SeriesDescription.$);
    return MarkerSeriesDescription;
}(SeriesDescription));
export { MarkerSeriesDescription };
//# sourceMappingURL=MarkerSeriesDescription.js.map
