/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { SeriesDescription } from "./SeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var ValueOverlayDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ValueOverlayDescription, _super);
    function ValueOverlayDescription() {
        var _this = _super.call(this) || this;
        _this.c8 = null;
        _this.cv = 0;
        _this.co = false;
        _this.c5 = null;
        _this.c7 = null;
        _this.c4 = null;
        _this.c2 = 0;
        _this.c6 = null;
        _this.cr = 0;
        _this.ct = 0;
        _this.cs = 0;
        _this.cq = 0;
        _this.cu = 0;
        return _this;
    }
    ValueOverlayDescription.prototype.get_type = function () {
        return "ValueOverlay";
    };
    Object.defineProperty(ValueOverlayDescription.prototype, "axisRef", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            this.c8 = a;
            this.e("AxisRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "value", {
        get: function () {
            return this.cv;
        },
        set: function (a) {
            this.cv = a;
            this.e("Value");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "isAxisAnnotationEnabled", {
        get: function () {
            return this.co;
        },
        set: function (a) {
            this.co = a;
            this.e("IsAxisAnnotationEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationFormatLabelRef", {
        get: function () {
            return this.c5;
        },
        set: function (a) {
            this.c5 = a;
            this.e("AxisAnnotationFormatLabelRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationTextColor", {
        get: function () {
            return this.c7;
        },
        set: function (a) {
            this.c7 = a;
            this.e("AxisAnnotationTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationBackground", {
        get: function () {
            return this.c4;
        },
        set: function (a) {
            this.c4 = a;
            this.e("AxisAnnotationBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationInterpolatedValuePrecision", {
        get: function () {
            return this.c2;
        },
        set: function (a) {
            this.c2 = a;
            this.e("AxisAnnotationInterpolatedValuePrecision");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationOutline", {
        get: function () {
            return this.c6;
        },
        set: function (a) {
            this.c6 = a;
            this.e("AxisAnnotationOutline");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingLeft", {
        get: function () {
            return this.cr;
        },
        set: function (a) {
            this.cr = a;
            this.e("AxisAnnotationPaddingLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingTop", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            this.ct = a;
            this.e("AxisAnnotationPaddingTop");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingRight", {
        get: function () {
            return this.cs;
        },
        set: function (a) {
            this.cs = a;
            this.e("AxisAnnotationPaddingRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationPaddingBottom", {
        get: function () {
            return this.cq;
        },
        set: function (a) {
            this.cq = a;
            this.e("AxisAnnotationPaddingBottom");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueOverlayDescription.prototype, "axisAnnotationStrokeThickness", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            this.cu = a;
            this.e("AxisAnnotationStrokeThickness");
        },
        enumerable: true,
        configurable: true
    });
    ValueOverlayDescription.$t = markType(ValueOverlayDescription, 'ValueOverlayDescription', SeriesDescription.$);
    return ValueOverlayDescription;
}(SeriesDescription));
export { ValueOverlayDescription };
//# sourceMappingURL=ValueOverlayDescription.js.map
