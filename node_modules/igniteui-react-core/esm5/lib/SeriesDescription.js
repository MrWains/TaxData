/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var SeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SeriesDescription, _super);
    function SeriesDescription() {
        var _this = _super.call(this) || this;
        _this.bh = null;
        _this.bn = null;
        _this.bm = null;
        _this.bk = null;
        _this.bl = null;
        _this.bi = null;
        _this.bu = null;
        _this.bv = null;
        _this.a7 = 0;
        _this.af = 0;
        _this.an = 0;
        _this.ak = 0;
        _this.al = 0;
        _this.am = 0;
        _this.bf = null;
        _this.bb = null;
        _this.bo = null;
        _this.be = null;
        _this.aj = 0;
        _this.y = 0;
        _this.bc = null;
        _this.w = 0;
        _this.ab = 0;
        _this.g = false;
        _this.j = false;
        _this.i = false;
        _this.ag = 0;
        _this.br = null;
        _this.m = false;
        _this.ah = 0;
        _this.ai = 0;
        _this.z = 0;
        _this.v = 0;
        _this.ac = 0;
        _this.x = 0;
        _this.h = false;
        _this.l = false;
        _this.by = null;
        _this.bp = null;
        _this.a8 = 0;
        _this.bw = null;
        _this.k = false;
        _this.bg = null;
        _this.f = false;
        _this.bj = null;
        _this.bd = null;
        _this.aa = 0;
        _this.ae = 0;
        _this.ad = 0;
        _this.bx = null;
        _this.bq = null;
        _this.bt = null;
        _this.bs = null;
        return _this;
    }
    SeriesDescription.prototype.get_type = function () {
        return "Series";
    };
    Object.defineProperty(SeriesDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "dataSourceRef", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.e("DataSourceRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "legendRef", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.e("LegendRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "legendItemVisibility", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.e("LegendItemVisibility");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "legendItemBadgeTemplateRef", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.e("LegendItemBadgeTemplateRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "legendItemTemplateRef", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.e("LegendItemTemplateRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "discreteLegendItemTemplateRef", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.e("DiscreteLegendItemTemplateRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "transitionEasingFunctionRef", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.e("TransitionEasingFunctionRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "transitionInEasingFunctionRef", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.e("TransitionInEasingFunctionRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "transitionDuration", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.e("TransitionDuration");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "resolution", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.e("Resolution");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "visibleRangeMarginTop", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.e("VisibleRangeMarginTop");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "visibleRangeMarginBottom", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.e("VisibleRangeMarginBottom");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "visibleRangeMarginLeft", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.e("VisibleRangeMarginLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "visibleRangeMarginRight", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.e("VisibleRangeMarginRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "brush", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.e("Brush");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "actualBrush", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.e("ActualBrush");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "outline", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.e("Outline");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "actualOutline", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.e("ActualOutline");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "thickness", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.e("Thickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "actualThickness", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.e("ActualThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "actualHighlightingMode", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.e("ActualHighlightingMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "actualHighlightingFadeOpacity", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.e("ActualHighlightingFadeOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "highlightingFadeOpacity", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.e("HighlightingFadeOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "isComponentHighlightingModeIgnored", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("IsComponentHighlightingModeIgnored");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "isHighlightingEnabled", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("IsHighlightingEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "isDropShadowEnabled", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.e("IsDropShadowEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "shadowBlur", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.e("ShadowBlur");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "shadowColor", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.e("ShadowColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "useSingleShadow", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.e("UseSingleShadow");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "shadowOffsetX", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.e("ShadowOffsetX");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "shadowOffsetY", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.e("ShadowOffsetY");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "areaFillOpacity", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.e("AreaFillOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "actualAreaFillOpacity", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.e("ActualAreaFillOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "markerFillOpacity", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.e("MarkerFillOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "actualMarkerFillOpacity", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.e("ActualMarkerFillOpacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "isDefaultToolTipSelected", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("IsDefaultToolTipSelected");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "showDefaultTooltip", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.e("ShowDefaultTooltip");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "visibleRangeMode", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.e("VisibleRangeMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "outlineMode", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.e("OutlineMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "transitionInDuration", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.e("TransitionInDuration");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "transitionInSpeedType", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.e("TransitionInSpeedType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "mouseOverEnabled", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.e("MouseOverEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "coercionMethodsRef", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.e("CoercionMethodsRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "expectFunctions", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("ExpectFunctions");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "hitTestMode", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.e("HitTestMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "actualHitTestMode", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.e("ActualHitTestMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "finalValue", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.e("FinalValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "percentChange", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.e("PercentChange");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "opacity", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.e("Opacity");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "visibility", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.e("Visibility");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "renderRequestedRef", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.e("RenderRequestedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "tooltipTemplateRef", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.e("TooltipTemplateRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SeriesDescription.prototype, "title", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.e("Title");
        },
        enumerable: true,
        configurable: true
    });
    SeriesDescription.$t = markType(SeriesDescription, 'SeriesDescription', Description.$);
    return SeriesDescription;
}(Description));
export { SeriesDescription };
//# sourceMappingURL=SeriesDescription.js.map
