/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { SeriesViewerDescription } from "./SeriesViewerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var DataChartDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(DataChartDescription, _super);
    function DataChartDescription() {
        var _this = _super.call(this) || this;
        _this.e1 = false;
        _this.fl = 0;
        _this.fm = 0;
        _this.fd = 0;
        _this.fe = 0;
        _this.e0 = false;
        _this.e2 = false;
        _this.f5 = null;
        _this.ez = false;
        _this.eq = null;
        _this.fg = 0;
        _this.ff = 0;
        _this.e3 = false;
        _this.er = null;
        _this.et = null;
        _this.es = null;
        _this.f4 = null;
        _this.f2 = null;
        _this.f3 = null;
        _this.ep = null;
        _this.fa = 0;
        _this.fc = 0;
        _this.fb = 0;
        _this.e9 = 0;
        _this.f1 = null;
        _this.fi = 0;
        _this.fk = 0;
        _this.fj = 0;
        _this.fh = 0;
        _this.f7 = null;
        _this.f6 = null;
        return _this;
    }
    DataChartDescription.prototype.get_type = function () {
        return "DataChart";
    };
    Object.defineProperty(DataChartDescription.prototype, "isSquare", {
        get: function () {
            return this.e1;
        },
        set: function (a) {
            this.e1 = a;
            this.e("IsSquare");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "windowScaleHorizontal", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.e("WindowScaleHorizontal");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "windowScaleVertical", {
        get: function () {
            return this.fm;
        },
        set: function (a) {
            this.fm = a;
            this.e("WindowScaleVertical");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualWindowScaleHorizontal", {
        get: function () {
            return this.fd;
        },
        set: function (a) {
            this.fd = a;
            this.e("ActualWindowScaleHorizontal");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualWindowScaleVertical", {
        get: function () {
            return this.fe;
        },
        set: function (a) {
            this.fe = a;
            this.e("ActualWindowScaleVertical");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "isHorizontalZoomEnabled", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            this.e0 = a;
            this.e("IsHorizontalZoomEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "isVerticalZoomEnabled", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            this.e2 = a;
            this.e("IsVerticalZoomEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "gridMode", {
        get: function () {
            return this.f5;
        },
        set: function (a) {
            this.f5 = a;
            this.e("GridMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "alignsGridLinesToPixels", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            this.ez = a;
            this.e("AlignsGridLinesToPixels");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "brushes", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            this.eq = a;
            this.e("Brushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "autoExpandMarginMaximumValue", {
        get: function () {
            return this.fg;
        },
        set: function (a) {
            this.fg = a;
            this.e("AutoExpandMarginMaximumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "autoExpandMarginExtraPadding", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            this.ff = a;
            this.e("AutoExpandMarginExtraPadding");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "shouldAutoExpandMarginForInitialLabels", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            this.e3 = a;
            this.e("ShouldAutoExpandMarginForInitialLabels");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "markerBrushes", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.e("MarkerBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "outlines", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.e("Outlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "markerOutlines", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.e("MarkerOutlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "defaultAxisStroke", {
        get: function () {
            return this.f4;
        },
        set: function (a) {
            this.f4 = a;
            this.e("DefaultAxisStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "defaultAxisMajorStroke", {
        get: function () {
            return this.f2;
        },
        set: function (a) {
            this.f2 = a;
            this.e("DefaultAxisMajorStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "defaultAxisMinorStroke", {
        get: function () {
            return this.f3;
        },
        set: function (a) {
            this.f3 = a;
            this.e("DefaultAxisMinorStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "axes", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.e("Axes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualPlotAreaMarginLeft", {
        get: function () {
            return this.fa;
        },
        set: function (a) {
            this.fa = a;
            this.e("ActualPlotAreaMarginLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualPlotAreaMarginTop", {
        get: function () {
            return this.fc;
        },
        set: function (a) {
            this.fc = a;
            this.e("ActualPlotAreaMarginTop");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualPlotAreaMarginRight", {
        get: function () {
            return this.fb;
        },
        set: function (a) {
            this.fb = a;
            this.e("ActualPlotAreaMarginRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "actualPlotAreaMarginBottom", {
        get: function () {
            return this.e9;
        },
        set: function (a) {
            this.e9 = a;
            this.e("ActualPlotAreaMarginBottom");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "computedPlotAreaMarginMode", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            this.f1 = a;
            this.e("ComputedPlotAreaMarginMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginLeft", {
        get: function () {
            return this.fi;
        },
        set: function (a) {
            this.fi = a;
            this.e("PlotAreaMarginLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginTop", {
        get: function () {
            return this.fk;
        },
        set: function (a) {
            this.fk = a;
            this.e("PlotAreaMarginTop");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginRight", {
        get: function () {
            return this.fj;
        },
        set: function (a) {
            this.fj = a;
            this.e("PlotAreaMarginRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "plotAreaMarginBottom", {
        get: function () {
            return this.fh;
        },
        set: function (a) {
            this.fh = a;
            this.e("PlotAreaMarginBottom");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "width", {
        get: function () {
            return this.f7;
        },
        set: function (a) {
            this.f7 = a;
            this.e("Width");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataChartDescription.prototype, "height", {
        get: function () {
            return this.f6;
        },
        set: function (a) {
            this.f6 = a;
            this.e("Height");
        },
        enumerable: true,
        configurable: true
    });
    DataChartDescription.$t = markType(DataChartDescription, 'DataChartDescription', SeriesViewerDescription.$);
    return DataChartDescription;
}(SeriesViewerDescription));
export { DataChartDescription };
//# sourceMappingURL=DataChartDescription.js.map
