/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CrosshairLayerDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(CrosshairLayerDescription, _super);
    function CrosshairLayerDescription() {
        var _this = _super.call(this) || this;
        _this.dt = null;
        _this.dx = null;
        _this.dv = null;
        _this.dw = null;
        _this.c0 = false;
        _this.cy = false;
        _this.d1 = null;
        _this.dz = null;
        _this.dp = 0;
        _this.d0 = null;
        _this.c5 = 0;
        _this.c7 = 0;
        _this.c6 = 0;
        _this.c4 = 0;
        _this.da = 0;
        _this.dc = 0;
        _this.db = 0;
        _this.c9 = 0;
        _this.c8 = 0;
        _this.d4 = null;
        _this.d2 = null;
        _this.dq = 0;
        _this.d3 = null;
        _this.dd = 0;
        _this.dy = null;
        _this.du = null;
        _this.cz = false;
        return _this;
    }
    CrosshairLayerDescription.prototype.get_type = function () {
        return "CrosshairLayer";
    };
    Object.defineProperty(CrosshairLayerDescription.prototype, "horizontalLineStroke", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            this.dt = a;
            this.e("HorizontalLineStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "verticalLineStroke", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.e("VerticalLineStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "targetSeriesName", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            this.dv = a;
            this.e("TargetSeriesName");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "targetSeriesRef", {
        get: function () {
            return this.dw;
        },
        set: function (a) {
            this.dw = a;
            this.e("TargetSeriesRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "useInterpolation", {
        get: function () {
            return this.c0;
        },
        set: function (a) {
            this.c0 = a;
            this.e("UseInterpolation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "isAxisAnnotationEnabled", {
        get: function () {
            return this.cy;
        },
        set: function (a) {
            this.cy = a;
            this.e("IsAxisAnnotationEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationTextColor", {
        get: function () {
            return this.d1;
        },
        set: function (a) {
            this.d1 = a;
            this.e("XAxisAnnotationTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationBackground", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            this.dz = a;
            this.e("XAxisAnnotationBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationInterpolatedValuePrecision", {
        get: function () {
            return this.dp;
        },
        set: function (a) {
            this.dp = a;
            this.e("XAxisAnnotationInterpolatedValuePrecision");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationOutline", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            this.d0 = a;
            this.e("XAxisAnnotationOutline");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingLeft", {
        get: function () {
            return this.c5;
        },
        set: function (a) {
            this.c5 = a;
            this.e("XAxisAnnotationPaddingLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingTop", {
        get: function () {
            return this.c7;
        },
        set: function (a) {
            this.c7 = a;
            this.e("XAxisAnnotationPaddingTop");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingRight", {
        get: function () {
            return this.c6;
        },
        set: function (a) {
            this.c6 = a;
            this.e("XAxisAnnotationPaddingRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingBottom", {
        get: function () {
            return this.c4;
        },
        set: function (a) {
            this.c4 = a;
            this.e("XAxisAnnotationPaddingBottom");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingLeft", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            this.da = a;
            this.e("YAxisAnnotationPaddingLeft");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingTop", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            this.dc = a;
            this.e("YAxisAnnotationPaddingTop");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingRight", {
        get: function () {
            return this.db;
        },
        set: function (a) {
            this.db = a;
            this.e("YAxisAnnotationPaddingRight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingBottom", {
        get: function () {
            return this.c9;
        },
        set: function (a) {
            this.c9 = a;
            this.e("YAxisAnnotationPaddingBottom");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationStrokeThickness", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            this.c8 = a;
            this.e("XAxisAnnotationStrokeThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationTextColor", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.e("YAxisAnnotationTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationBackground", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            this.d2 = a;
            this.e("YAxisAnnotationBackground");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationInterpolatedValuePrecision", {
        get: function () {
            return this.dq;
        },
        set: function (a) {
            this.dq = a;
            this.e("YAxisAnnotationInterpolatedValuePrecision");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationOutline", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.e("YAxisAnnotationOutline");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationStrokeThickness", {
        get: function () {
            return this.dd;
        },
        set: function (a) {
            this.dd = a;
            this.e("YAxisAnnotationStrokeThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "verticalLineVisibility", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            this.dy = a;
            this.e("VerticalLineVisibility");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "horizontalLineVisibility", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            this.du = a;
            this.e("HorizontalLineVisibility");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "skipUnknownValues", {
        get: function () {
            return this.cz;
        },
        set: function (a) {
            this.cz = a;
            this.e("SkipUnknownValues");
        },
        enumerable: true,
        configurable: true
    });
    CrosshairLayerDescription.$t = markType(CrosshairLayerDescription, 'CrosshairLayerDescription', AnnotationLayerDescription.$);
    return CrosshairLayerDescription;
}(AnnotationLayerDescription));
export { CrosshairLayerDescription };
//# sourceMappingURL=CrosshairLayerDescription.js.map
