/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var DatePickerDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(DatePickerDescription, _super);
    function DatePickerDescription() {
        var _this = _super.call(this) || this;
        _this.s = new Date();
        _this.r = new Date();
        _this.al = null;
        _this.ap = null;
        _this.am = null;
        _this.x = 0;
        _this.an = null;
        _this.ao = null;
        _this.ar = null;
        _this.q = new Date();
        _this.p = new Date();
        _this.ae = null;
        _this.ab = null;
        _this.at = null;
        _this.y = 0;
        _this.au = null;
        _this.av = null;
        _this.as = null;
        _this.aj = null;
        _this.h = false;
        _this.i = false;
        _this.f = false;
        _this.g = false;
        _this.af = null;
        _this.ag = null;
        _this.j = false;
        _this.ad = null;
        _this.ah = null;
        _this.aw = null;
        _this.ai = null;
        _this.aq = null;
        _this.ak = null;
        _this.ac = null;
        return _this;
    }
    DatePickerDescription.prototype.get_type = function () {
        return "DatePicker";
    };
    Object.defineProperty(DatePickerDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "value", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.e("Value");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "today", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.e("Today");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "label", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.e("Label");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "labelTextColor", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.e("LabelTextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "labelFontFamily", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.e("LabelFontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "labelFontSize", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.e("LabelFontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "labelFontStyle", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.e("LabelFontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "labelFontWeight", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.e("LabelFontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "placeholder", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.e("Placeholder");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "minDate", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.e("MinDate");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "maxDate", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.e("MaxDate");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "density", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.e("Density");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "baseTheme", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.e("BaseTheme");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "textFontFamily", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.e("TextFontFamily");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "textFontSize", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.e("TextFontSize");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "textFontStyle", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.e("TextFontStyle");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "textFontWeight", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.e("TextFontWeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "textColor", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.e("TextColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "iconColor", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.e("IconColor");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "showClearButton", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.e("ShowClearButton");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "showTodayButton", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.e("ShowTodayButton");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "allowTextInput", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
            this.e("AllowTextInput");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "openOnFocus", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
            this.e("OpenOnFocus");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "firstDayOfWeek", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.e("FirstDayOfWeek");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "firstWeekOfYear", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.e("FirstWeekOfYear");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "showWeekNumbers", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.e("ShowWeekNumbers");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "dateFormat", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.e("DateFormat");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "formatString", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.e("FormatString");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "valueChangedRef", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.e("ValueChangedRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "gotFocusRef", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.e("GotFocusRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "lostFocusRef", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.e("LostFocusRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "keyDownRef", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.e("KeyDownRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerDescription.prototype, "changingRef", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.e("ChangingRef");
        },
        enumerable: true,
        configurable: true
    });
    DatePickerDescription.$t = markType(DatePickerDescription, 'DatePickerDescription', Description.$);
    return DatePickerDescription;
}(Description));
export { DatePickerDescription };
//# sourceMappingURL=DatePickerDescription.js.map
