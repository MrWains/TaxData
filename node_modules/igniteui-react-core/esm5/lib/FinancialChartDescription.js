/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var FinancialChartDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(FinancialChartDescription, _super);
    function FinancialChartDescription() {
        var _this = _super.call(this) || this;
        _this.kr = null;
        _this.kt = null;
        _this.kq = null;
        _this.ko = null;
        _this.jp = 0;
        _this.i5 = false;
        _this.js = 0;
        _this.jb = false;
        _this.kg = 0;
        _this.ju = 0;
        _this.jw = 0;
        _this.jv = 0;
        _this.jx = 0;
        _this.ks = null;
        _this.ku = null;
        _this.kx = null;
        _this.i7 = false;
        _this.kp = null;
        _this.kv = null;
        _this.i9 = false;
        _this.ig = null;
        _this.il = null;
        _this.ja = false;
        _this.jr = 0;
        _this.kw = null;
        _this.ky = null;
        _this.ih = null;
        _this.ii = null;
        _this.ij = null;
        _this.ik = null;
        _this.ip = null;
        _this.io = null;
        _this.ie = null;
        _this.ic = null;
        _this.jt = 0;
        _this.jq = 0;
        _this.jo = 0;
        _this.id = null;
        _this.kc = 0;
        _this.jn = 0;
        _this.kf = 0;
        _this.kd = 0;
        _this.kb = 0;
        _this.ke = 0;
        _this.im = null;
        _this.ib = null;
        _this.i8 = false;
        _this.kz = null;
        _this.jy = 0;
        _this.i6 = false;
        _this.jk = new Date();
        _this.jj = new Date();
        _this.iq = null;
        _this.kn = null;
        return _this;
    }
    Object.defineProperty(FinancialChartDescription.prototype, "tooltipTemplateRef", {
        get: function () {
            return this.kr;
        },
        set: function (a) {
            this.kr = a;
            this.e("TooltipTemplateRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "width", {
        get: function () {
            return this.kt;
        },
        set: function (a) {
            this.kt = a;
            this.e("Width");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "height", {
        get: function () {
            return this.kq;
        },
        set: function (a) {
            this.kq = a;
            this.e("Height");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "background", {
        get: function () {
            return this.ko;
        },
        set: function (a) {
            this.ko = a;
            this.e("Background");
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartDescription.prototype.get_type = function () {
        return "FinancialChart";
    };
    Object.defineProperty(FinancialChartDescription.prototype, "leftMargin", {
        get: function () {
            return this.jp;
        },
        set: function (a) {
            this.jp = a;
            this.e("LeftMargin");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isHorizontalZoomEnabled", {
        get: function () {
            return this.i5;
        },
        set: function (a) {
            this.i5 = a;
            this.e("IsHorizontalZoomEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "toolbarHeight", {
        get: function () {
            return this.js;
        },
        set: function (a) {
            this.js = a;
            this.e("ToolbarHeight");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisIsLogarithmic", {
        get: function () {
            return this.jb;
        },
        set: function (a) {
            this.jb = a;
            this.e("YAxisIsLogarithmic");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLogarithmBase", {
        get: function () {
            return this.kg;
        },
        set: function (a) {
            this.kg = a;
            this.e("YAxisLogarithmBase");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisInterval", {
        get: function () {
            return this.ju;
        },
        set: function (a) {
            this.ju = a;
            this.e("YAxisInterval");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinimumValue", {
        get: function () {
            return this.jw;
        },
        set: function (a) {
            this.jw = a;
            this.e("YAxisMinimumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMaximumValue", {
        get: function () {
            return this.jv;
        },
        set: function (a) {
            this.jv = a;
            this.e("YAxisMaximumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinorInterval", {
        get: function () {
            return this.jx;
        },
        set: function (a) {
            this.jx = a;
            this.e("YAxisMinorInterval");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeType", {
        get: function () {
            return this.ks;
        },
        set: function (a) {
            this.ks = a;
            this.e("VolumeType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMode", {
        get: function () {
            return this.ku;
        },
        set: function (a) {
            this.ku = a;
            this.e("XAxisMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMode", {
        get: function () {
            return this.kx;
        },
        set: function (a) {
            this.kx = a;
            this.e("YAxisMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isToolbarVisible", {
        get: function () {
            return this.i7;
        },
        set: function (a) {
            this.i7 = a;
            this.e("IsToolbarVisible");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "chartType", {
        get: function () {
            return this.kp;
        },
        set: function (a) {
            this.kp = a;
            this.e("ChartType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLabelHorizontalAlignment", {
        get: function () {
            return this.kv;
        },
        set: function (a) {
            this.kv = a;
            this.e("YAxisLabelHorizontalAlignment");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isWindowSyncedToVisibleRange", {
        get: function () {
            return this.i9;
        },
        set: function (a) {
            this.i9 = a;
            this.e("IsWindowSyncedToVisibleRange");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorTypes", {
        get: function () {
            return this.ig;
        },
        set: function (a) {
            this.ig = a;
            this.e("IndicatorTypes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayTypes", {
        get: function () {
            return this.il;
        },
        set: function (a) {
            this.il = a;
            this.e("OverlayTypes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisAbbreviateLargeNumbers", {
        get: function () {
            return this.ja;
        },
        set: function (a) {
            this.ja = a;
            this.e("YAxisAbbreviateLargeNumbers");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "resolution", {
        get: function () {
            return this.jr;
        },
        set: function (a) {
            this.jr = a;
            this.e("Resolution");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLabelLocation", {
        get: function () {
            return this.kw;
        },
        set: function (a) {
            this.kw = a;
            this.e("YAxisLabelLocation");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderType", {
        get: function () {
            return this.ky;
        },
        set: function (a) {
            this.ky = a;
            this.e("ZoomSliderType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeBrushes", {
        get: function () {
            return this.ih;
        },
        set: function (a) {
            this.ih = a;
            this.e("NegativeBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeOutlines", {
        get: function () {
            return this.ii;
        },
        set: function (a) {
            this.ii = a;
            this.e("NegativeOutlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayBrushes", {
        get: function () {
            return this.ij;
        },
        set: function (a) {
            this.ij = a;
            this.e("OverlayBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayOutlines", {
        get: function () {
            return this.ik;
        },
        set: function (a) {
            this.ik = a;
            this.e("OverlayOutlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeOutlines", {
        get: function () {
            return this.ip;
        },
        set: function (a) {
            this.ip = a;
            this.e("VolumeOutlines");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeBrushes", {
        get: function () {
            return this.io;
        },
        set: function (a) {
            this.io = a;
            this.e("VolumeBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorNegativeBrushes", {
        get: function () {
            return this.ie;
        },
        set: function (a) {
            this.ie = a;
            this.e("IndicatorNegativeBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorBrushes", {
        get: function () {
            return this.ic;
        },
        set: function (a) {
            this.ic = a;
            this.e("IndicatorBrushes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeThickness", {
        get: function () {
            return this.jt;
        },
        set: function (a) {
            this.jt = a;
            this.e("VolumeThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayThickness", {
        get: function () {
            return this.jq;
        },
        set: function (a) {
            this.jq = a;
            this.e("OverlayThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorThickness", {
        get: function () {
            return this.jo;
        },
        set: function (a) {
            this.jo = a;
            this.e("IndicatorThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorDisplayTypes", {
        get: function () {
            return this.id;
        },
        set: function (a) {
            this.id = a;
            this.e("IndicatorDisplayTypes");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorPeriod", {
        get: function () {
            return this.kc;
        },
        set: function (a) {
            this.kc = a;
            this.e("IndicatorPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorMultiplier", {
        get: function () {
            return this.jn;
        },
        set: function (a) {
            this.jn = a;
            this.e("IndicatorMultiplier");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSmoothingPeriod", {
        get: function () {
            return this.kf;
        },
        set: function (a) {
            this.kf = a;
            this.e("IndicatorSmoothingPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorShortPeriod", {
        get: function () {
            return this.kd;
        },
        set: function (a) {
            this.kd = a;
            this.e("IndicatorShortPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorLongPeriod", {
        get: function () {
            return this.kb;
        },
        set: function (a) {
            this.kb = a;
            this.e("IndicatorLongPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSignalPeriod", {
        get: function () {
            return this.ke;
        },
        set: function (a) {
            this.ke = a;
            this.e("IndicatorSignalPeriod");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "rangeSelectorOptions", {
        get: function () {
            return this.im;
        },
        set: function (a) {
            this.im = a;
            this.e("RangeSelectorOptions");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "customIndicatorNames", {
        get: function () {
            return this.ib;
        },
        set: function (a) {
            this.ib = a;
            this.e("CustomIndicatorNames");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isVerticalZoomEnabled", {
        get: function () {
            return this.i8;
        },
        set: function (a) {
            this.i8 = a;
            this.e("IsVerticalZoomEnabled");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStroke", {
        get: function () {
            return this.kz;
        },
        set: function (a) {
            this.kz = a;
            this.e("ZoomSliderXAxisMajorStroke");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStrokeThickness", {
        get: function () {
            return this.jy;
        },
        set: function (a) {
            this.jy = a;
            this.e("ZoomSliderXAxisMajorStrokeThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isLegendVisible", {
        get: function () {
            return this.i6;
        },
        set: function (a) {
            this.i6 = a;
            this.e("IsLegendVisible");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMinimumValue", {
        get: function () {
            return this.jk;
        },
        set: function (a) {
            this.jk = a;
            this.e("XAxisMinimumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMaximumValue", {
        get: function () {
            return this.jj;
        },
        set: function (a) {
            this.jj = a;
            this.e("XAxisMaximumValue");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisBreaks", {
        get: function () {
            return this.iq;
        },
        set: function (a) {
            this.iq = a;
            this.e("XAxisBreaks");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "applyCustomIndicatorsRef", {
        get: function () {
            return this.kn;
        },
        set: function (a) {
            this.kn = a;
            this.e("ApplyCustomIndicatorsRef");
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartDescription.$t = markType(FinancialChartDescription, 'FinancialChartDescription', XYChartDescription.$);
    return FinancialChartDescription;
}(XYChartDescription));
export { FinancialChartDescription };
//# sourceMappingURL=FinancialChartDescription.js.map
