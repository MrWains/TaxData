/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { GeographicMapSeriesHostDescription } from "./GeographicMapSeriesHostDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var GeographicProportionalSymbolSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GeographicProportionalSymbolSeriesDescription, _super);
    function GeographicProportionalSymbolSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.dl = null;
        _this.dm = null;
        _this.dt = null;
        _this.dr = null;
        _this.dp = null;
        _this.ds = null;
        _this.dn = null;
        _this.dq = null;
        _this.dd = 0;
        _this.du = null;
        _this.cu = null;
        _this.dk = null;
        _this.di = null;
        _this.cs = null;
        _this.cw = false;
        _this.cz = false;
        _this.c7 = 0;
        _this.c6 = 0;
        _this.c8 = 0;
        _this.c0 = false;
        _this.cy = false;
        _this.cx = false;
        _this.dj = null;
        _this.dc = 0;
        _this.dh = null;
        _this.dg = null;
        return _this;
    }
    GeographicProportionalSymbolSeriesDescription.prototype.get_type = function () {
        return "GeographicProportionalSymbolSeries";
    };
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "latitudeMemberPath", {
        get: function () {
            return this.dl;
        },
        set: function (a) {
            this.dl = a;
            this.e("LatitudeMemberPath");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "longitudeMemberPath", {
        get: function () {
            return this.dm;
        },
        set: function (a) {
            this.dm = a;
            this.e("LongitudeMemberPath");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "markerType", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            this.dt = a;
            this.e("MarkerType");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "markerOutlineMode", {
        get: function () {
            return this.dr;
        },
        set: function (a) {
            this.dr = a;
            this.e("MarkerOutlineMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "markerFillMode", {
        get: function () {
            return this.dp;
        },
        set: function (a) {
            this.dp = a;
            this.e("MarkerFillMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "markerTemplateRef", {
        get: function () {
            return this.ds;
        },
        set: function (a) {
            this.ds = a;
            this.e("MarkerTemplateRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "markerBrush", {
        get: function () {
            return this.dn;
        },
        set: function (a) {
            this.dn = a;
            this.e("MarkerBrush");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "markerOutline", {
        get: function () {
            return this.dq;
        },
        set: function (a) {
            this.dq = a;
            this.e("MarkerOutline");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "maximumMarkers", {
        get: function () {
            return this.dd;
        },
        set: function (a) {
            this.dd = a;
            this.e("MaximumMarkers");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "radiusMemberPath", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            this.du = a;
            this.e("RadiusMemberPath");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "radiusScale", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            this.cu = a;
            this.e("RadiusScale");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "labelMemberPath", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            this.dk = a;
            this.e("LabelMemberPath");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "fillMemberPath", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.e("FillMemberPath");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "fillScale", {
        get: function () {
            return this.cs;
        },
        set: function (a) {
            this.cs = a;
            this.e("FillScale");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "fillScaleUseGlobalValues", {
        get: function () {
            return this.cw;
        },
        set: function (a) {
            this.cw = a;
            this.e("FillScaleUseGlobalValues");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "markerOutlineUsesFillScale", {
        get: function () {
            return this.cz;
        },
        set: function (a) {
            this.cz = a;
            this.e("MarkerOutlineUsesFillScale");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "markerOutlineBrightness", {
        get: function () {
            return this.c7;
        },
        set: function (a) {
            this.c7 = a;
            this.e("MarkerOutlineBrightness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "markerBrushBrightness", {
        get: function () {
            return this.c6;
        },
        set: function (a) {
            this.c6 = a;
            this.e("MarkerBrushBrightness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "markerThickness", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            this.c8 = a;
            this.e("MarkerThickness");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "radiusScaleUseGlobalValues", {
        get: function () {
            return this.c0;
        },
        set: function (a) {
            this.c0 = a;
            this.e("RadiusScaleUseGlobalValues");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "isCustomScatterStyleAllowed", {
        get: function () {
            return this.cy;
        },
        set: function (a) {
            this.cy = a;
            this.e("IsCustomScatterStyleAllowed");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "isCustomScatterMarkerStyleAllowed", {
        get: function () {
            return this.cx;
        },
        set: function (a) {
            this.cx = a;
            this.e("IsCustomScatterMarkerStyleAllowed");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "itemSearchMode", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.e("ItemSearchMode");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "itemSearchThreshold", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            this.dc = a;
            this.e("ItemSearchThreshold");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "assigningScatterStyleRef", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.e("AssigningScatterStyleRef");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GeographicProportionalSymbolSeriesDescription.prototype, "assigningScatterMarkerStyleRef", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.e("AssigningScatterMarkerStyleRef");
        },
        enumerable: true,
        configurable: true
    });
    GeographicProportionalSymbolSeriesDescription.$t = markType(GeographicProportionalSymbolSeriesDescription, 'GeographicProportionalSymbolSeriesDescription', GeographicMapSeriesHostDescription.$);
    return GeographicProportionalSymbolSeriesDescription;
}(GeographicMapSeriesHostDescription));
export { GeographicProportionalSymbolSeriesDescription };
//# sourceMappingURL=GeographicProportionalSymbolSeriesDescription.js.map
