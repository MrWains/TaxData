import { DefinitionBaseDescription } from "./DefinitionBaseDescription";
import { GridColumnAnimationSettingsDescription } from "./GridColumnAnimationSettingsDescription";
import { ColumnWidthDescription } from "./ColumnWidthDescription";
import { ColumnFilterConditionDescription } from "./ColumnFilterConditionDescription";
import { HeaderDescription } from "./HeaderDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class ColumnDescription extends DefinitionBaseDescription {
    static $t: Type;
    protected get_type(): string;
    private static __canMarshalByValue;
    constructor();
    private c6;
    paddingLeft: number;
    private c8;
    paddingTop: number;
    private c7;
    paddingRight: number;
    private c5;
    paddingBottom: number;
    private dw;
    name: string;
    private du;
    field: string;
    private dv;
    headerText: string;
    private dh;
    actualHeaderText: string;
    private d0;
    selectedBackground: string;
    private dl;
    actualSelectedBackground: string;
    private dy;
    rowHoverBackground: string;
    private dj;
    actualHoverBackground: string;
    private dz;
    rowHoverTextColor: string;
    private dk;
    actualRowHoverTextColor: string;
    private b6;
    animationSettings: GridColumnAnimationSettingsDescription;
    private b4;
    width: ColumnWidthDescription;
    private c0;
    minWidth: number;
    private ci;
    isFromMarkup: boolean;
    private cd;
    isAutoGenerated: boolean;
    private b2;
    filter: ColumnFilterConditionDescription;
    private b8;
    header: HeaderDescription;
    private ch;
    isFilteringEnabled: boolean;
    private ck;
    isResizingEnabled: boolean;
    private cj;
    isHidden: boolean;
    private cl;
    shouldRemoveWhenHidden: boolean;
    private d1;
    sortDirection: string;
    private dx;
    pinned: string;
    private dd;
    actualColumnOptionsIconAlignment: string;
    private dm;
    columnOptionsIconAlignment: string;
    private df;
    actualColumnOptionsIconColor: string;
    private dp;
    columnOptionsIconColor: string;
    private dn;
    columnOptionsIconBehavior: string;
    private de;
    actualColumnOptionsIconBehavior: string;
    private cb;
    actualIsColumnOptionsEnabled: boolean;
    private ce;
    isColumnOptionsEnabled: boolean;
    private cc;
    actualIsColumnOptionsSummariesEnabled: boolean;
    private cf;
    isColumnOptionsSummariesEnabled: boolean;
    private cg;
    isEditable: boolean;
    private dq;
    deletedTextColor: string;
    private dg;
    actualDeletedTextColor: string;
    private cz;
    editOpacity: number;
    private cx;
    actualEditOpacity: number;
    private dr;
    editFontFamily: string;
    private cy;
    editFontSize: number;
    private ds;
    editFontStyle: string;
    private dt;
    editFontWeight: string;
    private di;
    actualHeaderTextChangeRef: string;
}
