import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class SeriesDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private bh;
    dataSourceRef: string;
    private bn;
    legendRef: string;
    private bm;
    legendItemVisibility: string;
    private bk;
    legendItemBadgeTemplateRef: string;
    private bl;
    legendItemTemplateRef: string;
    private bi;
    discreteLegendItemTemplateRef: string;
    private bu;
    transitionEasingFunctionRef: string;
    private bv;
    transitionInEasingFunctionRef: string;
    private a7;
    transitionDuration: number;
    private af;
    resolution: number;
    private an;
    visibleRangeMarginTop: number;
    private ak;
    visibleRangeMarginBottom: number;
    private al;
    visibleRangeMarginLeft: number;
    private am;
    visibleRangeMarginRight: number;
    private bf;
    brush: string;
    private bb;
    actualBrush: string;
    private bo;
    outline: string;
    private be;
    actualOutline: string;
    private aj;
    thickness: number;
    private y;
    actualThickness: number;
    private bc;
    actualHighlightingMode: string;
    private w;
    actualHighlightingFadeOpacity: number;
    private ab;
    highlightingFadeOpacity: number;
    private g;
    isComponentHighlightingModeIgnored: boolean;
    private j;
    isHighlightingEnabled: boolean;
    private i;
    isDropShadowEnabled: boolean;
    private ag;
    shadowBlur: number;
    private br;
    shadowColor: string;
    private m;
    useSingleShadow: boolean;
    private ah;
    shadowOffsetX: number;
    private ai;
    shadowOffsetY: number;
    private z;
    areaFillOpacity: number;
    private v;
    actualAreaFillOpacity: number;
    private ac;
    markerFillOpacity: number;
    private x;
    actualMarkerFillOpacity: number;
    private h;
    isDefaultToolTipSelected: boolean;
    private l;
    showDefaultTooltip: boolean;
    private by;
    visibleRangeMode: string;
    private bp;
    outlineMode: string;
    private a8;
    transitionInDuration: number;
    private bw;
    transitionInSpeedType: string;
    private k;
    mouseOverEnabled: boolean;
    private bg;
    coercionMethodsRef: string;
    private f;
    expectFunctions: boolean;
    private bj;
    hitTestMode: string;
    private bd;
    actualHitTestMode: string;
    private aa;
    finalValue: number;
    private ae;
    percentChange: number;
    private ad;
    opacity: number;
    private bx;
    visibility: string;
    private bq;
    renderRequestedRef: string;
    private bt;
    tooltipTemplateRef: string;
    private bs;
    title: string;
}
