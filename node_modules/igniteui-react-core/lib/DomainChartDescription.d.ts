import { Description } from "./Description";
import { RectDescription } from "./RectDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class DomainChartDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private ay;
    pixelScalingRatio: number;
    private bb;
    titleLeftMargin: number;
    private bc;
    titleRightMargin: number;
    private bd;
    titleTopMargin: number;
    private ba;
    titleBottomMargin: number;
    private a6;
    subtitleLeftMargin: number;
    private a8;
    subtitleTopMargin: number;
    private a7;
    subtitleRightMargin: number;
    private a5;
    subtitleBottomMargin: number;
    private cz;
    subtitleTextColor: string;
    private c2;
    titleTextColor: string;
    private aw;
    leftMargin: number;
    private be;
    topMargin: number;
    private a4;
    rightMargin: number;
    private av;
    bottomMargin: number;
    private b4;
    transitionDuration: number;
    private c5;
    transitionEasingFunctionRef: string;
    private c0;
    subtitleTextStyle: string;
    private c3;
    titleTextStyle: string;
    private ci;
    dataSourceRef: string;
    private h;
    includedProperties: string[];
    private g;
    excludedProperties: string[];
    private f;
    brushes: string[];
    private l;
    outlines: string[];
    private cm;
    legendRef: string;
    private ae;
    isHorizontalZoomEnabled: boolean;
    private ag;
    isVerticalZoomEnabled: boolean;
    private af;
    isSeriesHighlightingEnabled: boolean;
    private v;
    windowRect: RectDescription;
    private cf;
    chartTitle: string;
    private cx;
    subtitle: string;
    private c1;
    titleAlignment: string;
    private cy;
    subtitleAlignment: string;
    private c7;
    unknownValuePlotting: string;
    private a3;
    resolution: number;
    private a9;
    thickness: number;
    private cp;
    outlineMode: string;
    private co;
    markerOutlineMode: string;
    private cn;
    markerFillMode: string;
    private ax;
    markerFillOpacity: number;
    private k;
    markerTypes: string[];
    private i;
    markerBrushes: string[];
    private j;
    markerOutlines: string[];
    private b3;
    markerMaxCount: number;
    private y;
    animateSeriesWhenAxisRangeChanges: boolean;
    private m;
    trendLineBrushes: string[];
    private c6;
    trendLineType: string;
    private bf;
    trendLineThickness: number;
    private x;
    alignsGridLinesToPixels: boolean;
    private a0;
    plotAreaMarginLeft: number;
    private a2;
    plotAreaMarginTop: number;
    private a1;
    plotAreaMarginRight: number;
    private az;
    plotAreaMarginBottom: number;
    private cg;
    computedPlotAreaMarginMode: string;
    private ck;
    highlightingMode: string;
    private cj;
    highlightingBehavior: string;
    private cl;
    legendHighlightingMode: string;
    private ah;
    shouldAutoExpandMarginForInitialLabels: boolean;
    private at;
    autoExpandMarginExtraPadding: number;
    private au;
    autoExpandMarginMaximumValue: number;
    private b5;
    trendLinePeriod: number;
    private c4;
    toolTipType: string;
    private ch;
    crosshairsDisplayMode: string;
    private ac;
    crosshairsSnapToData: boolean;
    private ab;
    crosshairsAnnotationEnabled: boolean;
    private ad;
    finalValueAnnotationsVisible: boolean;
    private aa;
    calloutsVisible: boolean;
    private z;
    calloutStyleUpdatingEventEnabled: boolean;
    private ca;
    calloutsDataSourceRef: string;
    private cd;
    calloutsXMemberPath: string;
    private ce;
    calloutsYMemberPath: string;
    private cb;
    calloutsLabelMemberPath: string;
    private b9;
    calloutsContentMemberPath: string;
    private cq;
    seriesAddedRef: string;
    private cw;
    seriesRemovedRef: string;
    private cs;
    seriesPointerEnterRef: string;
    private ct;
    seriesPointerLeaveRef: string;
    private cu;
    seriesPointerMoveRef: string;
    private cr;
    seriesPointerDownRef: string;
    private cv;
    seriesPointerUpRef: string;
    private cc;
    calloutStyleUpdatingRef: string;
}
